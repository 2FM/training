= Abecedario cifrado

== Cifrado por sustitución

El cifrado por sustitución es uno de los mas comunes y mas inseguros que existen en *criptografía*, simplemente se sustituyen cada una de las letras de un texto por otras letras, eso si conservando un orden dado de manera que si cambiamos la letra *a* por la letra *m* de una palabra del texto, todas las letras *a* de todas las palabras del texto se transformarán por la letra *m*. Es un cifrado muy inseguro para textos largos, ya que la persona que lo quiera descifrar puede inferir las letras originales por la repetición de las letras cambiadas en el texto, observando así palabras comunes que tengan una lógica.

== Reto en CodeEval 121

Nos dan como entrada unas líneas de texto ilegibles, que estan cifradas por el cifrado por sustitución, nuestra tarea es descifrar estas líneas de text encontrando las letras originales.

*Entrada:*

rbc vjnmkf kd yxyqci na rbc zjkfoscdd ew rbc ujllmcp

tc rbkso rbyr ejp mysljylc kd kxveddknmc re jsicpdrysi

de kr kd eoya kw aej icfkici re zjkr

*Salida:*

the public is amazed by the quickness of the juggler

we think that our language is impossible to understand

so it is okay if you decided to quit


_El programa en lenguaje *bash* queda de la siguiente manera:_

[source,bash]
----
# Programa para descifrar líneas de texto cifradas por sustitución
# Por Alejandro Aguirre Soto (GoSo o GoXo)

# leemos cada línea de texto y la guardamos en la variable line
while read line || [[ -n "$line" ]]; do
	
	# después de evaluar la entrada y salida del reto creamos los dos abecedarios
	# el abecedario encriptado y el descifrado, la posición en estas listas 
	# es la clave para cambiar la letra b por la  letra h; o la letra c por la letra e
	ENCRYPTED=('b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 
		'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'a' ' ');
	DECRYPTED=('h' 'e' 's' 'o' 'c' 'v' 'x' 'd' 'u' 'i' 
		'g' 'l' 'b' 'k' 'r' 'z' 't' 'n' 'w' 'j' 'p' 'f' 'm' 'a' 'q' 'y' ' ');
	
	# tomamos el tamaño de la línea de texto y lo guardamos en la variable len
	len=${#line};
	
	# ciclo for que recorre toda la línea de texto que tenemos como entrada
	for ((i=0; i<=len; i++))
	do
	
	# tomamos la letra en la posición i y la guardamos en la variable CH
		CH=${line:$i:${i+1}};
		
		#ciclo for para encontrar la posición k de la letra (CH) en el abecedario encriptado
		for k in "${!ENCRYPTED[@]}"; do

			# tomamos la posición k en la que se encuentra CH en el abecesario encriptado
  			if [[ "${ENCRYPTED[$k]}" = "$CH" ]]; then

			# imprimimos la letra del abecedario descifrado en la posición k
       			echo -n "${DECRYPTED[$k]}";
       		fi
		done
	done
	
	# imprimimos una nueva línea vacía con el comando echo, esto es para pasar a la siguiente entrada
	echo
 
done < 1
# Acá acaba nuestro programa
----

== Conclusión

Vimos que el cifrado por sustitución es uno de las inseguros que hay en criptografía, ya que con un simple analisis y tomándose su tiempo se pueden revelar los textos encriptados con este tipo de cifrado, es por esto que normalmente este tipo de encriptación sólo se usa con fines educativos y académicos.

== Referencias

https://es.wikipedia.org/wiki/Cifrado_por_sustituci%C3%B3n[Cifrado por sustitución, wikipedia]

== Link del reto
https://www.codeeval.com/open_challenges/121/[Lost In Translation]
