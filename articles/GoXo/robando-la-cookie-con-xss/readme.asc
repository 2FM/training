= Robando la cookie con XSS

== ¿Qué es XSS?

*XSS* del inglés *Cross-site scripting* o escripteado cruzado de sitio,
no se le llama
*CSS* para diferenciarlo de las hojas de Estilo en cascada
(Cascading Style Sheets) utilizadas para darle estilo a las páginas web.

Un sitio es vulnerable a inyección *XSS* cuando presenta variables que no son
*saneadas* o *filtradas* por el servidor, de manera que un atacante puede
ingresar código interpretado entre comillas angulares (<><>) a estas variables,
y este código lo ejecutaría el servidor como si fuera propio del sitio web.

La inyección mas común y corriente es utilizar un *script* que permita
visualizar una alerta de javascript:

[source, javascript]
----
<script>alert();</script>
----

si después de haber ejecutado el código anterior en una variable, el sitio web
muestra una alerta de javascript, entonces este sitio es demasiado vulnerable a
*inyección XSS*.

== ChallengeLand realistic 4

Este reto propone ingresar como administrador para pasarlo. se dispone de
un página web con un formulario para ingresar (login), y otra página web
con un formulario para escribir o contactar al administador:

image::img1.png[]
*_Figura1: formulario para ingresar_*

image::img2.png[]
*_Figura2: formulario para contactar_*

Se denota al ingresar al formulario de contacto una vulnerabilidad
de inyección XSS, después de que el campo del mensaje dejará ingresar
comillas angulares ('<><>') o tags para escribir una inyección XSS.

Se busca robarle la cookie al administrador por tanto ejecutamos el siguiente
código:

[source, javascript]
----
<script>document.write('cookie:' document.cookie);</script>
----

Y en el campo de correo se escribe cualquier cosa:

image::img3.png[]
*_Figura3: formulario para contactar con inyección XSS_*

Se da click al botón de *Submit Query* y eventualmente la cookie del
administrador sera revelada:

image::img4.png[]
*_Figura4: cookie del administrador_*

Luego con un *Tamper Data* o con *Burp* ingresamos cualquier tipo de
credenciales en el formulario de ingreso (login) *junto con el valor de
la cookie
robada del administador* para que eventualmente tengamos acceso privilegiado
al sitio y en consecuencia completar este reto.

Se recomienda fuertemente *NUNCA* implementar una cookie para validar al
administrador de un sitio web, ya que esta cookie podría ser robada por el
atacante teniendo así privilegios de administrador.

== Referencias

https://es.wikipedia.org/wiki/Cross-site_scripting[XSS en Wikipedia]

== Link del reto

http://challengeland.co/Realistic/b35a0cd8b5[ChallengeLand Realistic 4]
